diff -uNr mesa-23.1.3/src/gallium/drivers/zink/zink_kopper.c mesa-23.1.3.mod/src/gallium/drivers/zink/zink_kopper.c
--- mesa-23.1.3/src/gallium/drivers/zink/zink_kopper.c	2023-06-23 00:42:08.000000000 +0800
+++ mesa-23.1.3.mod/src/gallium/drivers/zink/zink_kopper.c	2023-07-10 08:57:38.071998461 +0800
@@ -24,6 +24,8 @@
 
 #include "util/detect_os.h"
 
+#include "util/os_misc.h"
+
 #include "zink_context.h"
 #include "zink_screen.h"
 #include "zink_surface.h"
@@ -57,11 +59,13 @@
    switch (type) {
 #ifdef VK_USE_PLATFORM_XCB_KHR
    case VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR:
+      if (os_get_option("ZINK_NO_XCB")) { break; }
       cdt->type = KOPPER_X11;
       break;
 #endif
 #ifdef VK_USE_PLATFORM_WAYLAND_KHR
    case VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR:
+      if (os_get_option("ZINK_NO_WAYLAND")) { break; }
       cdt->type = KOPPER_WAYLAND;
       break;
 #endif
@@ -86,6 +90,7 @@
    switch (type) {
 #ifdef VK_USE_PLATFORM_XCB_KHR
    case VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR: {
+      if (os_get_option("ZINK_NO_XCB")) { break; }
       VkXcbSurfaceCreateInfoKHR *xcb = (VkXcbSurfaceCreateInfoKHR *)&cdt->info.bos;
       error = VKSCR(CreateXcbSurfaceKHR)(screen->instance, xcb, NULL, &surface);
       break;
@@ -93,6 +98,7 @@
 #endif
 #ifdef VK_USE_PLATFORM_WAYLAND_KHR
    case VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR: {
+      if (os_get_option("ZINK_NO_WAYLAND")) { break; }
       VkWaylandSurfaceCreateInfoKHR *wlsci = (VkWaylandSurfaceCreateInfoKHR *)&cdt->info.bos;
       error = VKSCR(CreateWaylandSurfaceKHR)(screen->instance, wlsci, NULL, &surface);
       break;
@@ -195,6 +201,7 @@
    switch (cdt->type) {
 #ifdef VK_USE_PLATFORM_XCB_KHR
    case KOPPER_X11: {
+      if (os_get_option("ZINK_NO_XCB")) { break; }
       VkXcbSurfaceCreateInfoKHR *xcb = (VkXcbSurfaceCreateInfoKHR *)&cdt->info.bos;
       he = _mesa_hash_table_search_pre_hashed(&screen->dts, xcb->window, (void*)(uintptr_t)xcb->window);
       break;
@@ -202,6 +209,7 @@
 #endif
 #ifdef VK_USE_PLATFORM_WAYLAND_KHR
    case KOPPER_WAYLAND: {
+      if (os_get_option("ZINK_NO_WAYLAND")) { break; }
       VkWaylandSurfaceCreateInfoKHR *wlsci = (VkWaylandSurfaceCreateInfoKHR *)&cdt->info.bos;
       he = _mesa_hash_table_search(&screen->dts, wlsci->surface);
       break;
@@ -289,6 +297,7 @@
        * Due to above restrictions, it is only possible to create a new swapchain on this
        * platform with imageExtent being equal to the current size of the window.
        */
+      if (os_get_option("ZINK_NO_XCB")) { break; }
       cswap->scci.imageExtent.width = cdt->caps.currentExtent.width;
       cswap->scci.imageExtent.height = cdt->caps.currentExtent.height;
       break;
@@ -298,6 +307,7 @@
        * application sets a swapchainâ€™s imageExtent to will be the size of the window, after the first image is
        * presented.
        */
+      if (os_get_option("ZINK_NO_WAYLAND")) { break; }
       cswap->scci.imageExtent.width = w;
       cswap->scci.imageExtent.height = h;
       break;
@@ -313,7 +323,7 @@
       VkResult result = VKSCR(QueueWaitIdle)(screen->queue);
       if (result != VK_SUCCESS)
          mesa_loge("ZINK: vkQueueWaitIdle failed (%s)", vk_Result_to_str(result));
-      zink_kopper_deinit_displaytarget(screen, cdt);
+      //zink_kopper_deinit_displaytarget(screen, cdt);
       error = VKSCR(CreateSwapchainKHR)(screen->dev, &cswap->scci, NULL,
                                    &cswap->swapchain);
    }
@@ -452,6 +462,7 @@
    switch (cdt->type) {
 #ifdef VK_USE_PLATFORM_XCB_KHR
    case KOPPER_X11: {
+      if (os_get_option("ZINK_NO_XCB")) { break; }
       VkXcbSurfaceCreateInfoKHR *xcb = (VkXcbSurfaceCreateInfoKHR *)&cdt->info.bos;
       _mesa_hash_table_insert_pre_hashed(&screen->dts, xcb->window, (void*)(uintptr_t)xcb->window, cdt);
       break;
@@ -459,6 +470,7 @@
 #endif
 #ifdef VK_USE_PLATFORM_WAYLAND_KHR
    case KOPPER_WAYLAND: {
+      if (os_get_option("ZINK_NO_WAYLAND")) { break; }
       VkWaylandSurfaceCreateInfoKHR *wlsci = (VkWaylandSurfaceCreateInfoKHR *)&cdt->info.bos;
       _mesa_hash_table_insert(&screen->dts, wlsci->surface, cdt);
       break;
diff -uNr mesa-23.1.3/src/gallium/targets/dri/target.c mesa-23.1.3.mod/src/gallium/targets/dri/target.c
--- mesa-23.1.3/src/gallium/targets/dri/target.c	2023-06-23 00:42:08.000000000 +0800
+++ mesa-23.1.3.mod/src/gallium/targets/dri/target.c	2023-07-10 00:29:26.469408433 +0800
@@ -3,6 +3,8 @@
 
 #include "dri_screen.h"
 
+#include "util/os_misc.h"
+
 #define DEFINE_LOADER_DRM_ENTRYPOINT(drivername)                          \
 const __DRIextension **__driDriverGetExtensions_##drivername(void);       \
 PUBLIC const __DRIextension **__driDriverGetExtensions_##drivername(void) \
@@ -136,6 +138,9 @@
 
 PUBLIC const __DRIextension **__driDriverGetExtensions_zink(void)
 {
+   if (os_get_option("ZINK_NO_GALLIUMVK")) {
+      return galliumdrm_driver_extensions;
+   }
    return galliumvk_driver_extensions;
 }
 #endif
